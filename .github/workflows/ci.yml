name: CI

on:
  push:
    branches:
      - main

permissions:
  contents: read
  id-token: write
      

jobs:
  build:
    name: 'Build and Push'
    runs-on: ubuntu-latest
    # strategy:
    #   matrix:
    #     node: [ 20 ]

    steps:
    - name: Checkout
      uses: actions/checkout@v5.0.0
    
    - name: Set up Node.js | ${{ matrix.node }}
      uses: actions/setup-node@v4.4.0
      with:
        # node-version: ${{ matrix.node }}
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies and run tests
      run: |
           npm install
           npm run test

    - name: Get Tag
      id: generate_tag
      run: |
        SHA=$(echo $GITHUB_SHA | head -c7)
        echo "sha=$SHA" >> $GITHUB_OUTPUT
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
        aws-region: ${{ vars.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build and push Docker images to ECR
      id: build-docker-image
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        TAG: ${{ steps.generate_tag.outputs.sha }}
      run: |
        docker build -t $REGISTRY/rocketseat-ci-api:$TAG .
        docker push $REGISTRY/rocketseat-ci-api:$TAG
        IMAGE=$(echo $REGISTRY/rocketseat-ci-api:$TAG)
        echo "image=$IMAGE" >> $GITHUB_OUTPUT

    # fora do marketplace : https://github.com/awslabs/amazon-app-runner-deploy
    - name: Deploy to App Runner
      id: deploy-to-apprunner
      uses: awslabs/amazon-app-runner-deploy@main
      with:
        service: rocketseat-ci-api
        access-role-arn: ${{ secrets.APP_RUNNER_ROLE_ARN }}
        region: ${{ vars.AWS_REGION }}
        cpu: 1
        memory: 2
        port: 3000
        image: ${{ steps.build-docker-image.outputs.image }}
        wait-for-service-stability-seconds: 180
    
    - name: Check deployment status
      run: |
        echo "Deployment succeeded and is running. ${{ steps.deploy-to-apprunner.outputs.service-url }}"
    # Alternativa para o login no ECR
    # - name: Build ECR image
    #   run: |
    #     docker build -t 132466043431.dkr.ecr.us-east-2.amazonaws.com/rocketseat-ci-api:${{ steps.generate_tag.outputs.sha }} .
    #     docker push 132466043431.dkr.ecr.us-east-2.amazonaws.com/rocketseat-ci-api:${{ steps.generate_tag.outputs.sha }}
    
    # Login no Docker Hub usando variáveis de repositório
    # - name: Login to Docker Hub
    #   uses: docker/login-action@v3
    #   with:
    #     username: ${{ vars.DOCKERHUB_USERNAME }}
    #     password: ${{ secrets.DOCKERHUB_TOKEN }}

    # - name: Build and push Docker images
    #   uses: docker/build-push-action@v6.18.0
    #   with:
    #     push: true
    #     tags: ${{ vars.DOCKERHUB_USERNAME }}/rocketseat-ci-api:${{ steps.generate_tag.outputs.sha }}, ${{ vars.DOCKERHUB_USERNAME }}/rocketseat-ci-api:latest

    # Outra alternativa para o login no Docker Hub
    # - name: Build Docker image
    #   run: |
    #     docker build -t ${{ vars.DOCKERHUB_USERNAME }}/rocketseat-ci-api:${{ steps.generate_tag.outputs.sha }} .
    
    # - name: Push Docker image
    #   run: |
    #     docker push ${{ vars.DOCKERHUB_USERNAME }}/rocketseat-ci-api:${{ steps.generate_tag.outputs.sha }}